input {
  tcp {
    port => 5000
    codec => json_lines
    type => "application_log"
  }
  
  udp {
    port => 5000
    codec => json_lines
    type => "application_log"
  }
  
  generator {
    message => '{"timestamp": "%{+YYYY-MM-dd HH:mm:ss.SSS}", "level": "INFO", "message": "Log de exemplo do Logstash", "service": "logstash-generator", "environment": "development"}'
    count => 100
    threads => 1
  }
}

filter {
  if [message] =~ /^{.*}$/ {
    json {
      source => "message"
    }
  }
  
  # Corrigir o campo host se for um objeto
  if [host] and [host][name] {
    mutate {
      replace => { "host" => "%{[host][name]}" }
    }
  }
  
  date {
    match => ["timestamp", "ISO8601"]
    target => "@timestamp"
    remove_field => ["timestamp"]
  }
  
  mutate {
    add_field => {
      "received_at" => "%{@timestamp}"
      "received_from" => "%{host}"
    }
  }
  
  fingerprint {
    source => ["message", "@timestamp"]
    target => "[@metadata][fingerprint]"
    method => "SHA1"
    base64encode => true
  }
  
  if [level] == "ERROR" {
    mutate {
      add_tag => ["error", "urgent"]
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    user => "elastic"
    password => "Elastic123!"    
    index => "application-logs-%{+YYYY.MM.dd}"
  }
  
  stdout {
    codec => rubydebug
  }
}
